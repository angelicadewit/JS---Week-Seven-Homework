{"version":3,"sources":["Validator.js"],"names":["Validator","selector","$field","document","querySelector","console","warn","$errorContainer","parentElement","createElement","classList","add","appendChild","errors","addEventListener","validate","bind","log","value","toggle","$p","push","name","setTimeout","showErrors","length","innerHTML","forEach","error","removeAttribute","style","borderColor"],"mappings":";;;;;;IAAMA,S;AACF,uBAAYC,QAAZ,EAAqB;AAAA;;AACjB,aAAKC,MAAL,GAAcC,SAASC,aAAT,CAAuBH,QAAvB,CAAd;AACA,YAAI,CAAC,KAAKC,MAAV,EAAiB;AACbG,oBAAQC,IAAR,8BAAwCL,QAAxC;AACA,mBAAO,KAAP;AACH;;AAED,aAAKM,eAAL,GAAuB,KAAKL,MAAL,CAAYM,aAAZ,CAA0BJ,aAA1B,CAAwC,gBAAxC,CAAvB;;AAEA;AACA,aAAKG,eAAL,GAAuBJ,SAASM,aAAT,CAAuB,KAAvB,CAAvB;AACA,aAAKF,eAAL,CAAqBG,SAArB,CAA+BC,GAA/B,CAAmC,eAAnC;AACA,aAAKT,MAAL,CAAYM,aAAZ,CAA0BI,WAA1B,CAAuC,KAAKL,eAA5C;;AAGA;AACA,aAAKM,MAAL,GAAc,EAAd;;AAEA;AACA;AACA;;AAEA,aAAKX,MAAL,CAAYY,gBAAZ,UAAsC,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAtC;AACA,aAAKd,MAAL,CAAYY,gBAAZ,SAAqC,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAArC;AACH;;;;mCAKS;AACPX,oBAAQY,GAAR,CAAY,KAAKf,MAAL,CAAYgB,KAAxB;;AAEA,iBAAKL,MAAL,GAAc,EAAd;;AAEA,iBAAKX,MAAL,CAAYQ,SAAZ,CAAsBS,MAAtB,CAA6B,WAA7B,EAA0C,IAA1C;AACC,gBAAI,CAAC,KAAKjB,MAAL,CAAYgB,KAAjB,EAAuB;AACnB,oBAAIE,KAAKjB,SAASM,aAAT,CAAuB,GAAvB,CAAT;AACA,qBAAKI,MAAL,CAAYQ,IAAZ,CAAiB,2BAA2B,KAAKnB,MAAL,CAAYoB,IAAvC,WAAjB;AACA,qBAAKf,eAAL,CAAqBK,WAArB,CAAiCQ,EAAjC;AACH;;AAED;AACA;AACAG,uBAAW,KAAKC,UAAL,CAAgBR,IAAhB,CAAqB,IAArB,CAAX,EAAuC,CAAvC;AACH;;;qCAGW;AAAA;;AACR,gBAAI,KAAKH,MAAL,CAAYY,MAAhB,EAAwB;AACpB,qBAAKlB,eAAL,CAAqBmB,SAArB,GAAiC,EAAjC;AACA,qBAAKb,MAAL,CAAYc,OAAZ,CAAoB,UAACC,KAAD,EAAW;AAC3B;AACA,wBAAIR,KAAKjB,SAASM,aAAT,CAAuB,GAAvB,CAAT;AACAW,uBAAGM,SAAH,IAAiBE,KAAjB;AACA,0BAAKrB,eAAL,CAAqBK,WAArB,CAAiCQ,EAAjC;AACA,0BAAKlB,MAAL,CAAY2B,eAAZ,CAA4B,OAA5B;AACA,0BAAK3B,MAAL,CAAY4B,KAAZ,CAAkBC,WAAlB;AACH,iBAPD;AAQJ,aAVA,MAUM;AACF;AACA,qBAAK7B,MAAL,CAAY2B,eAAZ,CAA4B,OAA5B;AACA,qBAAK3B,MAAL,CAAY4B,KAAZ,CAAkBC,WAAlB;AACJ;AACH","file":"Validator.js","sourcesContent":["class Validator{\n    constructor(selector){\n        this.$field = document.querySelector(selector);\n        if (!this.$field){\n            console.warn(`couldn't find selector: `,selector)\n            return false;\n        }\n\n        this.$errorContainer = this.$field.parentElement.querySelector('.error-message');\n\n        //make elements to show errors in\n        this.$errorContainer = document.createElement(\"div\");\n        this.$errorContainer.classList.add('error-message');\n        this.$field.parentElement.appendChild (this.$errorContainer)\n\n\n        //keep track of the errors\n        this.errors = [];\n\n        // add event listener to call this.validate\n        // but overrule its _this_ logic, and force its\n        // _this_ to be the Validate class instance\n\n        this.$field.addEventListener(`keyup`, this.validate.bind(this))\n        this.$field.addEventListener(`blur`, this.validate.bind(this))\n    }\n\n    \n    \n\n    validate(){\n       console.log(this.$field.value)\n\n       this.errors = [];\n\n       this.$field.classList.toggle(\"not-valid\", true)\n        if (!this.$field.value){\n            let $p = document.createElement(\"p\")\n            this.errors.push(`You must fill out the ` + this.$field.name + ` field`)\n            this.$errorContainer.appendChild($p)\n        }\n\n        //this is a hack\n        // putting a settimeout will run after everything \n        setTimeout(this.showErrors.bind(this), 0)\n    }\n\n\n    showErrors(){\n        if (this.errors.length) {\n            this.$errorContainer.innerHTML = \"\";\n            this.errors.forEach((error) => {\n                // this.$errorContainer.innerHTML += \"<p>\" + error + \"</p>\"\n                let $p = document.createElement(\"p\")\n                $p.innerHTML +=  error\n                this.$errorContainer.appendChild($p)\n                this.$field.removeAttribute(\"style\")\n                this.$field.style.borderColor = `red`\n            })\n       } else {\n            // this.$field.classList.remove(\"not-valid\")\n            this.$field.removeAttribute(\"style\")\n            this.$field.style.borderColor = `green`\n       }\n    }\n}"]}