{"version":3,"sources":["Validator.js"],"names":["Validator","selector","$field","document","querySelector","console","warn","$errorContainer","createElement","classList","add","parentElement","appendChild","errors","addEventListener","validate","bind","log","value","toggle","$p","push","name","pop","setTimeout","showErrors","length","innerHTML","forEach","error","removeAttribute","style","borderColor"],"mappings":";;;;;;IAAMA,S;AACF,uBAAYC,QAAZ,EAAqB;AAAA;;AACjB,aAAKC,MAAL,GAAcC,SAASC,aAAT,CAAuBH,QAAvB,CAAd;AACA,YAAI,CAAC,KAAKC,MAAV,EAAiB;AACbG,oBAAQC,IAAR,6BAAwCL,QAAxC;AACA,mBAAO,KAAP;AACH;;AAED;AACA,aAAKM,eAAL,GAAuBJ,SAASK,aAAT,CAAuB,KAAvB,CAAvB;AACA,aAAKD,eAAL,CAAqBE,SAArB,CAA+BC,GAA/B,CAAmC,eAAnC;AACA,aAAKR,MAAL,CAAYS,aAAZ,CAA0BC,WAA1B,CAAuC,KAAKL,eAA5C;;AAGA;AACA,aAAKM,MAAL,GAAc,EAAd;;AAEA;AACA;AACA;;AAEA,aAAKX,MAAL,CAAYY,gBAAZ,UAAsC,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAtC;AACA,aAAKd,MAAL,CAAYY,gBAAZ,SAAqC,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAArC;AACH;;;;mCAKS;AACPX,oBAAQY,GAAR,CAAY,KAAKf,MAAL,CAAYgB,KAAxB;;AAEA,iBAAKL,MAAL,GAAc,EAAd;;AAEA,iBAAKX,MAAL,CAAYO,SAAZ,CAAsBU,MAAtB,CAA6B,WAA7B,EAA0C,IAA1C;AACC,gBAAI,CAAC,KAAKjB,MAAL,CAAYgB,KAAjB,EAAuB;AACnB,oBAAIE,KAAKjB,SAASK,aAAT,CAAuB,GAAvB,CAAT;AACA,qBAAKK,MAAL,CAAYQ,IAAZ,CAAiB,2BAA2B,KAAKnB,MAAL,CAAYoB,IAAvC,WAAjB;AACH,aAHD,MAGO;AACH,qBAAKT,MAAL,CAAYU,GAAZ,CAAgB,2BAA2B,KAAKrB,MAAL,CAAYoB,IAAvC,WAAhB;AACH;;AAED;AACA;AACAE,uBAAW,KAAKC,UAAL,CAAgBT,IAAhB,CAAqB,IAArB,CAAX,EAAuC,CAAvC;AACH;;;qCAGW;AAAA;;AACR,gBAAI,KAAKH,MAAL,CAAYa,MAAhB,EAAwB;AACpB,qBAAKnB,eAAL,CAAqBoB,SAArB,GAAiC,EAAjC;AACA,qBAAKd,MAAL,CAAYe,OAAZ,CAAoB,UAACC,KAAD,EAAW;AAC3B;AACA,wBAAIT,KAAKjB,SAASK,aAAT,CAAuB,GAAvB,CAAT;AACAY,uBAAGO,SAAH,IAAiBE,KAAjB;AACA,0BAAKtB,eAAL,CAAqBK,WAArB,CAAiCQ,EAAjC;AACA,0BAAKlB,MAAL,CAAY4B,eAAZ,CAA4B,OAA5B;AACA,0BAAK5B,MAAL,CAAY6B,KAAZ,CAAkBC,WAAlB;AACAR,+BAAW,MAAKC,UAAL,CAAgBT,IAAhB,CAAqB,KAArB,CAAX,EAAuC,CAAvC;AACH,iBARD;AASJ,aAXA,MAWM;AACF;AACA,qBAAKd,MAAL,CAAY4B,eAAZ,CAA4B,OAA5B;AACA,qBAAK5B,MAAL,CAAY6B,KAAZ,CAAkBC,WAAlB;AACA,qBAAKzB,eAAL,CAAqBoB,SAArB,GAAiC,EAAjC;AACJ;AACH","file":"Validator.js","sourcesContent":["class Validator{\n    constructor(selector){\n        this.$field = document.querySelector(selector);\n        if (!this.$field){\n            console.warn(`couldn't find selector: `,selector)\n            return false;\n        }\n\n        //make elements to show errors in\n        this.$errorContainer = document.createElement(\"div\");\n        this.$errorContainer.classList.add('error-message');\n        this.$field.parentElement.appendChild (this.$errorContainer)\n\n\n        //keep track of the errors\n        this.errors = [];\n\n        // add event listener to call this.validate\n        // but overrule its _this_ logic, and force its\n        // _this_ to be the Validate class instance\n\n        this.$field.addEventListener(`keyup`, this.validate.bind(this))\n        this.$field.addEventListener(`blur`, this.validate.bind(this))\n    }\n\n    \n    \n\n    validate(){\n       console.log(this.$field.value)\n\n       this.errors = [];\n\n       this.$field.classList.toggle(\"not-valid\", true)\n        if (!this.$field.value){\n            let $p = document.createElement(\"p\")\n            this.errors.push(`You must fill out the ` + this.$field.name + ` field`)\n        } else {\n            this.errors.pop(`You must fill out the ` + this.$field.name + ` field`)\n        }\n\n        //this is a hack\n        // putting a settimeout will run after everything \n        setTimeout(this.showErrors.bind(this), 0)\n    }\n\n\n    showErrors(){\n        if (this.errors.length) {\n            this.$errorContainer.innerHTML = \"\";\n            this.errors.forEach((error) => {\n                // this.$errorContainer.innerHTML += \"<p>\" + error + \"</p>\"\n                let $p = document.createElement(\"p\")\n                $p.innerHTML +=  error\n                this.$errorContainer.appendChild($p)\n                this.$field.removeAttribute(\"style\")\n                this.$field.style.borderColor = `red`\n                setTimeout(this.showErrors.bind(this), 0)\n            })\n       } else {\n            // this.$field.classList.remove(\"not-valid\")\n            this.$field.removeAttribute(\"style\")\n            this.$field.style.borderColor = `green`\n            this.$errorContainer.innerHTML = \"\";\n       }\n    }\n}"]}